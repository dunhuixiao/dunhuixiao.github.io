<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用 GitHub Actions 自动部署 Hexo Blog 到 GitHub Page</title>
    <link href="/2022/04/17/Git/%E4%BD%BF%E7%94%A8-GitHub-Actions-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-Hexo-Blog-%E5%88%B0-GitHub-Page/"/>
    <url>/2022/04/17/Git/%E4%BD%BF%E7%94%A8-GitHub-Actions-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-Hexo-Blog-%E5%88%B0-GitHub-Page/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>之前在使用 Vuepress 构建静态站点时配置了 GitHub Actions 来实现 CI 流程，现在准备配置到 Hexo Blog 上实现提交分支代码自动部署到 GitHub Page 中。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="Git-仓库"><a href="#Git-仓库" class="headerlink" title="Git 仓库"></a>Git 仓库</h3><p>准备以下两个仓库</p><ol><li>Blog 仓库用来存放 Hexo 项目</li><li>GitHub Page 仓库用来展示静态博客</li></ol><h3 id="生成公钥私钥"><a href="#生成公钥私钥" class="headerlink" title="生成公钥私钥"></a>生成公钥私钥</h3><p>这里在之前配置 SSH 时已经处理完毕，操作步骤也比较简单，在任意文件夹打开 <code>Git Bash</code> 后输入以下指令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><pre><code class="hljs PowerShell"><span class="hljs-comment"># 定位到对应文件夹</span><br><span class="hljs-built_in">cd</span> ~/.ssh <br><br><span class="hljs-comment"># 生成公钥私钥，一路回车即可</span><br>ssh<span class="hljs-literal">-keygen</span> <span class="hljs-literal">-t</span> rsa <span class="hljs-literal">-C</span> <span class="hljs-string">&quot;邮箱账户&quot;</span><br><br><span class="hljs-comment"># 查看公钥</span><br><span class="hljs-built_in">cat</span> id_rsa.pub<br><br><span class="hljs-comment"># 查看私钥</span><br><span class="hljs-built_in">cat</span> id_rsa<br></code></pre></td></tr></table></figure><p>根据以上指令获取到公钥和私钥，私钥配置在 <code>GitHub -&gt; Setting -&gt; SSH and GPG keys -&gt; New SSH Key</code>，配置完成后即可在本机使用 SSH clone git 项目，大部分情况下国内使用 HTTPS 链接 clone 会出现超时情况，改为使用 SSH 会解决这个问题。</p><h3 id="配置部署密钥"><a href="#配置部署密钥" class="headerlink" title="配置部署密钥"></a>配置部署密钥</h3><p>复制公钥部分信息，如下图所示，配置在 Blog 仓库 <code>Setting -&gt; Secrets -&gt; Actions -&gt; New repository secret</code>，创建名称为 <code>HEXO_DEPLOY_PRIVATE_KEY</code>。</p><p><img src="/../../img/Git/20220417231604.png"><br><img src="/../../img/Git/20220417231820.png"></p><h2 id="编辑-GitHub-Actions"><a href="#编辑-GitHub-Actions" class="headerlink" title="编辑 GitHub Actions"></a>编辑 GitHub Actions</h2><p>在 Blog 仓库 Actions 中点击 New workflow，选择 Simple workflow 后粘贴以下内容并创建。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">CI</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-comment"># 每当 push 到 master 分支时触发部署</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [<span class="hljs-string">master</span>]<br>  <span class="hljs-comment"># 手动触发部署</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br><br><span class="hljs-comment"># 环境变量</span><br><span class="hljs-attr">env:</span><br>  <span class="hljs-comment"># 部署用户</span><br>  <span class="hljs-attr">GIT_USER:</span> <span class="hljs-string">用户名</span><br>  <span class="hljs-comment"># 部署邮箱</span><br>  <span class="hljs-attr">GIT_EMAIL:</span> <span class="hljs-string">邮箱地址</span><br>  <span class="hljs-comment"># Hexo 所使用的主题</span><br>  <span class="hljs-attr">THEME_REPO:</span> <span class="hljs-string">fluid-dev/hexo-theme-fluid</span><br>  <span class="hljs-comment"># Hexo 所使用的主题分支</span><br>  <span class="hljs-attr">THEME_BRANCH:</span> <span class="hljs-string">master</span><br>  <span class="hljs-comment"># 目标部署仓库</span><br>  <span class="hljs-attr">DEPLOY_REPO:</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Page</span> <span class="hljs-string">仓库</span><br>  <span class="hljs-comment"># 目标部署分支</span><br>  <span class="hljs-attr">DEPLOY_BRANCH:</span> <span class="hljs-string">master</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">on</span> <span class="hljs-string">node</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node_version</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">and</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.os</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">strategy:</span><br>      <span class="hljs-attr">matrix:</span><br>        <span class="hljs-attr">os:</span> [<span class="hljs-string">ubuntu-latest</span>]<br>        <span class="hljs-attr">node_version:</span> [<span class="hljs-number">12.</span><span class="hljs-string">x</span>]<br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-string">theme</span> <span class="hljs-string">repo</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">repository:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.THEME_REPO</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">ref:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.THEME_BRANCH</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">themes/concise</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-string">deploy</span> <span class="hljs-string">repo</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">repository:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.DEPLOY_REPO</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">ref:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.DEPLOY_BRANCH</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">.deploy_git</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Use</span> <span class="hljs-string">Node.js</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node_version</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node_version</span> <span class="hljs-string">&#125;&#125;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Configuration</span> <span class="hljs-string">environment</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-comment"># 配置好的私有密钥</span><br>          <span class="hljs-attr">HEXO_DEPLOY_PRI:</span> <span class="hljs-string">$&#123;&#123;secrets.HEXO_DEPLOY_PRIVATE_KEY&#125;&#125;</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          sudo timedatectl set-timezone &quot;Asia/Shanghai&quot;</span><br><span class="hljs-string">          mkdir -p ~/.ssh/</span><br><span class="hljs-string">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span><br><span class="hljs-string">          chmod 600 ~/.ssh/id_rsa</span><br><span class="hljs-string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string">          git config --global user.name $GIT_USER</span><br><span class="hljs-string">          git config --global user.email $GIT_EMAIL</span><br><span class="hljs-string">          cp _config.fluid.yml themes/concise/_config.yml</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">dependencies</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          npm install</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">hexo</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br>          <span class="hljs-string">npm</span> <span class="hljs-string">run</span> <span class="hljs-string">deploy</span><br></code></pre></td></tr></table></figure><p>该操作会在仓库 <code>.github/workflows/</code> 下创建一个 <code>.yml</code> 文件，<code>GitHub Actions</code> 会根据该文件内的配置进行自动化流程。</p><p>最终目录结构如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">blog (repository)<br>├── _config<span class="hljs-selector-class">.fluid</span><span class="hljs-selector-class">.yml</span><br>└── <span class="hljs-selector-class">.github</span><br>    └── workflows<br>        └── CI.yml<br></code></pre></td></tr></table></figure><p>其中 <code>_config.fluid.yml</code> 是我正在使用的 Hexo 主题配置文件，如果你使用了其他主题，可以将 <code>.yml</code> 文件里的 <code>_config.fluid.yml</code> 替换成其他主题的配置文件名。</p><p>如果需要了解更多可查阅官方文档 <a href="https://docs.github.com/cn/actions">GitHub Actions</a>，也可以阅读阮一峰老师的博客 <a href="https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">GitHub Actions 入门教程</a>。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>配置成功后，提交代码，在 Blog 仓库 Actions 中可以看到每次提交的部署情况。<br><img src="/../../img/Git/20220417232826.png"></p><p>在 CI 执行完毕后，查阅 GitHub Page 仓库，可以看到静态文件已经被更新，本次提交的 <code>.md</code> 文档成功发布至网站。</p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub Actions</tag>
      
      <tag>CI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA Setting Repository 同步仓库报错解决</title>
    <link href="/2022/03/10/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/IDEA-Setting-Repository-%E5%90%8C%E6%AD%A5%E4%BB%93%E5%BA%93%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/"/>
    <url>/2022/03/10/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/IDEA-Setting-Repository-%E5%90%8C%E6%AD%A5%E4%BB%93%E5%BA%93%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<ol><li>报错 <code>Commit on repo without HEAD currently not supported</code><ol><li>将当前设置导出备份，然后删除 <code>C:\Users\USERNAME\AppData\Roaming\JetBrains\IntelliJIdeaXXX\settingsRepository</code></li><li>reset IDEA 后，再次尝试同步，正常</li></ol></li><li>报错 <code>git upload pack</code><ol><li>网络问题，换成 gitee 源</li><li>在 IDEA 内配置科学上网<ol start="2"><li>正常电脑的科学上网链接成功后，将 IDEA Proxy 内的设置修改为 auto 即可</li></ol></li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>工具教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 npm-check-updates 更新前端项目中使用到的 npm 包</title>
    <link href="/2021/09/05/JavaScript/%E4%BD%BF%E7%94%A8-npm-check-updates-%E6%9B%B4%E6%96%B0%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84-npm-%E5%8C%85/"/>
    <url>/2021/09/05/JavaScript/%E4%BD%BF%E7%94%A8-npm-check-updates-%E6%9B%B4%E6%96%B0%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84-npm-%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs JavaScript">npm install -g npm-check-updates<br></code></pre></td></tr></table></figure><p><img src="/../../img/JavaScript/1630855933311-1ddb6f08-0fed-4ddd-9bd2-0a62f9533ea7.png"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs PowerShell">ncu <span class="hljs-literal">--help</span> //查看相关命令<br><br>ncu //检查当前项目中是否有需要更新的包<br><br>ncu <span class="hljs-literal">-u</span> //更新当前项目中引用的package至最新版 package.json<br></code></pre></td></tr></table></figure><p><img src="/../../img/JavaScript/1630856224377-5ec3ab1c-2ecb-43da-85f3-8f9332971feb.png"></p>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>npm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git SSH Key 配置好后通过 TortoiseGit GUI 获取代码报错</title>
    <link href="/2021/08/06/Git/Git-SSH-Key-%E9%85%8D%E7%BD%AE%E5%A5%BD%E5%90%8E%E9%80%9A%E8%BF%87-TortoiseGit-GUI-%E8%8E%B7%E5%8F%96%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/"/>
    <url>/2021/08/06/Git/Git-SSH-Key-%E9%85%8D%E7%BD%AE%E5%A5%BD%E5%90%8E%E9%80%9A%E8%BF%87-TortoiseGit-GUI-%E8%8E%B7%E5%8F%96%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>因为 TortoiseGit 默认使用的密钥格式不同，Git 使用 <code>OpenSSH</code> 格式，扩展名为 <code>.rsa</code>，而 TortoiseGit 使用 <code>PuTTY</code> 格式，扩展名为 <code>.ppk</code>。<br>SourceTree 也默认使用的是 <code>PuTTY</code> 格式，可以在<code>工具 -&gt; 选项 -&gt; 一般 -&gt; SSH客户端配置</code>中修改。<br><img src="/../../img/Git/1650114954023-98b9e194-fe13-43d3-9392-be7d790808ca.png"></p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>在安装 <code>TortoiseGit</code> 引导时选择 <code>OpenSSH</code> 格式<br><img src="/../../img/Git/1628257914482-d72067d6-6822-408c-b780-c19bc6b4b89d.png"></p><p>或者是在安装完毕后修改 SSH 客户端到 git ssh.exe<br><img src="/../../img/Git/1628257957022-26f100e0-3a14-4265-9232-ed1b3ab9aced.png"></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>SSH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WIN10 蓝牙无法删除解决方案</title>
    <link href="/2021/07/30/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/WIN10-%E8%93%9D%E7%89%99%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2021/07/30/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/WIN10-%E8%93%9D%E7%89%99%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>两台电脑互换了无线网卡：</p><ol><li>A电脑：AX200 &#x3D;&gt; RTL8828BE</li><li>B电脑：RTL8828BE &#x3D;&gt; AX200</li></ol><p>新的 Xbox 手柄链接到 B 电脑上成功，删除旧的 Xbox 手柄无线设备失败，在设备管理器里<code>查看 - 显示隐藏的设备 - 蓝牙</code>，找到未连接的 Xbox 手柄删除成功，B 电脑完毕。<br>A 电脑重复以上操作后，在 A 电脑的蓝牙连接池里面有 Xbox 设备显示已配对，但是不管是开启设备配对，或是激活手柄电脑重新搜索均失败，途中测试拿旧手柄连接 B 电脑成功。判断是 A 电脑的蓝牙模块设置出了问题，旧手柄连接在了一个虚拟的蓝牙枚举器上，光是在设备管理器里面删除设备并不管用。过段时间或是重启电脑又会出现，且因为旧手柄的设备码已连接，重新配对时A电脑均搜索不到手柄。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ol><li>尝试在蓝牙设置、设备管理器、打印机与设备重复删除，无用</li><li>尝试重装网卡启动，无用</li><li>尝试重装蓝牙驱动，RTL 官网驱动下载速度太慢，下载到一半使用其他方案完成，于是取消下载</li></ol><p>成功方案为在 <code>power shell</code> 里运行了一段代码，代码逻辑是搜索电脑配对的蓝牙设备，根据编号选择后，调用底层方法删除该蓝牙设备，代码如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div></td><td class="code"><pre><code class="hljs PowerShell"><span class="hljs-variable">$Source</span> = <span class="hljs-string">@&quot;</span><br><span class="hljs-string">[DllImport(&quot;BluetoothAPIs.dll&quot;, SetLastError = true, CallingConvention = CallingConvention.StdCall)]</span><br><span class="hljs-string">[return: MarshalAs(UnmanagedType.U4)]</span><br><span class="hljs-string">static extern UInt32 BluetoothRemoveDevice(IntPtr pAddress);</span><br><span class="hljs-string"></span><br><span class="hljs-string">public static UInt32 Unpair(UInt64 BTAddress) &#123;</span><br><span class="hljs-string">GCHandle pinnedAddr = GCHandle.Alloc(BTAddress, GCHandleType.Pinned);</span><br><span class="hljs-string">IntPtr pAddress     = pinnedAddr.AddrOfPinnedObject();</span><br><span class="hljs-string"></span><br><span class="hljs-string">UInt32 result       = BluetoothRemoveDevice(pAddress);</span><br><span class="hljs-string">pinnedAddr.Free();</span><br><span class="hljs-string">return result;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">&quot;@</span><br><br><span class="hljs-function"><span class="hljs-keyword">Function</span> <span class="hljs-title">Get-BTDevice</span></span> &#123;<br><span class="hljs-built_in">Get-PnpDevice</span> <span class="hljs-literal">-class</span> Bluetooth |<br>?&#123;<span class="hljs-variable">$_</span>.HardwareID <span class="hljs-operator">-match</span> <span class="hljs-string">&#x27;DEV_&#x27;</span>&#125; |<br><span class="hljs-built_in">select</span> Status, <span class="hljs-class"><span class="hljs-keyword">Class</span>, <span class="hljs-title">FriendlyName</span>, <span class="hljs-title">HardwareID</span>,</span><br><span class="hljs-class"># <span class="hljs-title">Extract</span> <span class="hljs-title">device</span> <span class="hljs-title">address</span> <span class="hljs-title">from</span> <span class="hljs-title">HardwareID</span></span><br><span class="hljs-class">@</span>&#123;N=<span class="hljs-string">&#x27;Address&#x27;</span>;E=&#123;[<span class="hljs-type">uInt64</span>](<span class="hljs-string">&#x27;0x&#123;0&#125;&#x27;</span> <span class="hljs-operator">-f</span> <span class="hljs-variable">$_</span>.HardwareID[<span class="hljs-number">0</span>].Substring(<span class="hljs-number">12</span>))&#125;&#125;<br>&#125;<br><br><span class="hljs-comment">################## Execution Begins Here ################</span><br><br><span class="hljs-variable">$BTR</span>       = <span class="hljs-built_in">Add-Type</span> <span class="hljs-literal">-MemberDefinition</span> <span class="hljs-variable">$Source</span> <span class="hljs-literal">-Name</span> <span class="hljs-string">&quot;BTRemover&quot;</span>  <span class="hljs-literal">-Namespace</span> <span class="hljs-string">&quot;BStuff&quot;</span> <span class="hljs-literal">-PassThru</span><br><span class="hljs-variable">$BTDevices</span> = <span class="hljs-selector-tag">@</span>(<span class="hljs-built_in">Get-BTDevice</span>) <span class="hljs-comment"># Force array if null or single item</span><br><span class="hljs-keyword">Do</span> &#123;<br><span class="hljs-keyword">If</span> (<span class="hljs-variable">$BTDevices</span>.Count) &#123;<br><span class="hljs-string">&quot;`n******** Bluetooth Devices ********`n&quot;</span> | <span class="hljs-built_in">Write-Host</span><br><span class="hljs-keyword">For</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> <span class="hljs-operator">-lt</span> <span class="hljs-variable">$BTDevices</span>.Count; <span class="hljs-variable">$i</span>++) &#123;<br>(<span class="hljs-string">&#x27;&#123;0,5&#125; - &#123;1&#125;&#x27;</span> <span class="hljs-operator">-f</span> (<span class="hljs-variable">$i</span>+<span class="hljs-number">1</span>), <span class="hljs-variable">$BTDevices</span>[<span class="hljs-variable">$i</span>].FriendlyName) | <span class="hljs-built_in">Write-Host</span><br>&#125;<br><span class="hljs-variable">$selected</span> = <span class="hljs-built_in">Read-Host</span> <span class="hljs-string">&quot;`nSelect a device to remove (0 to Exit)&quot;</span><br><span class="hljs-keyword">If</span> ([<span class="hljs-built_in">int</span>]<span class="hljs-variable">$selected</span> <span class="hljs-operator">-in</span> <span class="hljs-number">1</span>..<span class="hljs-variable">$BTDevices</span>.Count) &#123;<br><span class="hljs-string">&#x27;Removing device: &#123;0&#125;&#x27;</span> <span class="hljs-operator">-f</span> <span class="hljs-variable">$BTDevices</span>[<span class="hljs-variable">$Selected</span>-<span class="hljs-number">1</span>].FriendlyName | <span class="hljs-built_in">Write-Host</span><br><span class="hljs-variable">$Result</span> = <span class="hljs-variable">$BTR::Unpair</span>(<span class="hljs-variable">$BTDevices</span>[<span class="hljs-variable">$Selected</span>-<span class="hljs-number">1</span>].Address)<br><span class="hljs-keyword">If</span> (!<span class="hljs-variable">$Result</span>) &#123;<span class="hljs-string">&quot;Device removed successfully.&quot;</span> | <span class="hljs-built_in">Write-Host</span>&#125;<br><span class="hljs-keyword">Else</span> &#123;<span class="hljs-string">&quot;Sorry, an error occured.&quot;</span> | <span class="hljs-built_in">Write-Host</span>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">Else</span> &#123;<br><span class="hljs-string">&quot;`n********* No devices foundd ********&quot;</span> | <span class="hljs-built_in">Write-Host</span><br>&#125;<br>&#125; <span class="hljs-keyword">While</span> ((<span class="hljs-variable">$BTDevices</span> = <span class="hljs-selector-tag">@</span>(<span class="hljs-built_in">Get-BTDevice</span>)) <span class="hljs-operator">-and</span> [<span class="hljs-built_in">int</span>]<span class="hljs-variable">$selected</span>)<br></code></pre></td></tr></table></figure><p>选择完设备后，虽然提示信息为 <code>&quot;Sorry, an error occured.&quot;</code>，但是在蓝牙界面配对已经可以搜索到旧 Xbox 手柄，问题解决。</p><p>搜索资料时跟该方案列在一起的还有一yarn个方案如下：</p><ol><li>下载<a href="https://bluetoothinstaller.com/bluetooth-command-line-tools">修复工具</a>，一路默认选项完成安装</li><li>打开 <code>PowerShell</code>，命令行输入 <code>btpair -u</code>，回车执行</li><li>等待一会，就可以去设置把蓝牙设备删除了<br>在无法删除设备时在 B 电脑上尝试无用，故没有选择在 A 电脑上使用</li></ol><div class="note note-primary">            <p>方案参考:<br><a href="https://blog.csdn.net/tajun77/article/details/88940173">https://blog.csdn.net/tajun77/article/details/88940173</a><br><a href="https://blog.csdn.net/weixin_45803061/article/details/113972258">https://blog.csdn.net/weixin_45803061/article/details/113972258</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>工具教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>电脑硬件</tag>
      
      <tag>WIN10</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
